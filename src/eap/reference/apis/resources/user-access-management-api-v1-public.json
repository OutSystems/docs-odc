{
  "openapi": "3.0.1",
  "info": {
    "title": "User and Access Management API",
    "description": "REST endpoints for retrieving and managing user and access in your organization.",
    "version": "v1"
  },
  "servers": [
    {
      "url": "https://ODC_PORTAL_DOMAIN/api/identity/v1",
      "description": "Replace ODC_PORTAL_DOMAIN with the domain of your organization."
    },
    {
      "url": "https://{odc-portal-domain}/api/identity/v1",
      "description": "User and Access Management API",
      "variables": {
        "odc-portal-domain": {
          "default": "ODC_PORTAL_DOMAIN",
          "description": "The domain of your organization"
        }
      }
    }
  ],
  "security": [{
    "bearerAuth": []
  }],
  "paths": {
    "/application-roles": {
      "get": {
        "tags": [
          "application-roles"
        ],
        "summary": "Returns a list of application roles.",
        "description": "Returns a list of application roles that match the specified filters. Use query parameters to refine the search.\n\nAPI Client needs the **User management > View end users** permission.",
        "operationId": "ApplicationRole_QueryApplicationRoles",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "The application role key.",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "assetKey",
            "in": "query",
            "description": "The asset key that the application role belongs to.",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "environmentKey",
            "in": "query",
            "description": "Filters application roles by environment key (stage).",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "nameContains",
            "in": "query",
            "description": "Filters application roles by name.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Used for sorting the list. Ascending by default. Prepend a hyphen, \"-\", to get a descending sort, for example \"-name\". Default: name. Allowed: name, environmentKey or assetKey.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Maximum number of results returned. Allowed values: 1 to 100 Default value: 100.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Offset of the first result returned. Default value: 0.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApplicationRoleResponsePaginatedResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "x-os-permissions": "API Client needs the **User management > View end users** permission."
      }
    },
    "/application-roles/{key}/users": {
      "get": {
        "tags": [
          "application-roles"
        ],
        "summary": "Returns the list of users for the specific application role.",
        "description": "Returns a list of users that match the specified filters. Use query parameters to refine the search.\n\nAPI Client needs the **User management > View end users** permission.",
        "operationId": "ApplicationRole_QueryUsersByApplicationRole",
        "parameters": [
          {
            "name": "key",
            "in": "path",
            "description": "Application role key.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "userKey",
            "in": "query",
            "description": "User's key to search.",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "nameOrEmailContains",
            "in": "query",
            "description": "Filters users by name or email address.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "nameOrEmailOrUsernameContains",
            "in": "query",
            "description": "Filters users by name or email address or username.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "lastLoginAtSince",
            "in": "query",
            "description": "Only returns users whose last login occurred on or after the specified date and time.",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "lastLoginAtTo",
            "in": "query",
            "description": "Only returns users whose last login occurred before or on the specified date and time.",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Maximum number of results returned. Allowed values: 1 to 100 Default value: 100.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Offset of the first result returned. Default value: 0.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Used for sorting the list. Ascending by default. Prepend a hyphen, \"-\", to get a descending sort, for example \"-name\". Default: name. Allowed: userKey, name, email, status, lastLoginAt.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "embed",
            "in": "query",
            "description": "List of fields to embed in the response.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/UserProfileEmbed"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RoleUserResponsePaginatedResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "x-os-permissions": "API Client needs the **User management > View end users** permission."
      }
    },
    "/users/bulk": {
      "post": {
        "tags": [
          "users"
        ],
        "summary": "Bulk create users and optionally in the built-in identity provider.",
        "description": "Returns an operations status object with an operation key that can be used later to get the status of the bulk create.\n\nAPI Client needs the **User management > Manage users** permission.",
        "operationId": "BulkUserProfile_CreateBulkUserProfilesOperation",
        "requestBody": {
          "description": "Bulk Create User Request.",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UserProfileCreateRequestBulkApiRequest"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UserProfileCreateRequestBulkApiRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Accepted"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "x-os-permissions": "API Client needs the **User management > Manage users** permission."
      }
    },
    "/users/bulk/{key}": {
      "get": {
        "tags": [
          "users"
        ],
        "summary": "Get the bulk user operation status.",
        "description": "Returns an operations status object that contains the overall status of the bulk operation. \n\nIf the bulk operation has a status of 'Finished' or 'FinishedWithErrors', the result of each and every item in the list is returned as well. \n\nIf the bulk operation is 'Pending' or 'Processing', only the overall status is returned.\n\nAPI Client needs the **User management > Manage users** permission.",
        "operationId": "BulkUserProfile_GetBulkUserProfileOperationStatus",
        "parameters": [
          {
            "name": "key",
            "in": "path",
            "description": "Key of the operation that was obtained during submitting bulk operation.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BulkUserProfileOperationRecordBulkApiResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "x-os-permissions": "API Client needs the **User management > Manage users** permission."
      }
    },
    "/groups/{key}/users": {
      "patch": {
        "tags": [
          "groups"
        ],
        "summary": "Allow to add or remove users from a group.",
        "description": "Allows adding or removing users from a specified group. Manage group membership by specifying the group key and providing lists of user keys to be added or removed.\n\nAPI Client needs the **User management > Manage end-user groups** permission.",
        "operationId": "Group_AddOrRemoveUsersFromGroup",
        "parameters": [
          {
            "name": "key",
            "in": "path",
            "description": "The group key.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "The request object.",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/PatchUsersByGroupRequest"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/PatchUsersByGroupRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "x-os-permissions": "API Client needs the **User management > Manage end-user groups** permission."
      },
      "get": {
        "tags": [
          "groups"
        ],
        "summary": "Returns a list of users associated with a group.",
        "description": "Returns a list of users associated with a group that match the specified filters. Use query parameters to refine the search.\n\nAPI Client needs the **User management > Manage end-user groups** permission.",
        "operationId": "Group_QueryUsersFromGroup",
        "parameters": [
          {
            "name": "key",
            "in": "path",
            "description": "The group's key.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "userKey",
            "in": "query",
            "description": "The user's key.",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "nameOrEmailContains",
            "in": "query",
            "description": "Filters users by name or email address.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "nameOrEmailOrUsernameContains",
            "in": "query",
            "description": "Filters users by name or email or username.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "lastLoginAtSince",
            "in": "query",
            "description": "Only returns users whose last login occurred on or after the specified date and time.",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "lastLoginAtTo",
            "in": "query",
            "description": "Only returns users whose last login occurred before or on the specified date and time.",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "membershipType",
            "in": "query",
            "description": "Filters users by membership type that can be `Assigned` or `Mapped`.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/MembershipType"
                }
              ]
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Maximum number of results returned. Allowed values: 1 to 100 Default value: 100.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Offset of the first result returned. Default value: 0.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Used for sorting the list. Ascending by default. Prepend a hyphen, \"-\", to get a descending sort, for example \"-name\". Default: name. Allowed: key, name, email, status, lastLoginAt.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "embed",
            "in": "query",
            "description": "List of fields to embed in the response.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/UserProfileEmbed"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GroupUserPaginatedResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "x-os-permissions": "API Client needs the **User management > Manage end-user groups** permission."
      }
    },
    "/groups": {
      "post": {
        "tags": [
          "groups"
        ],
        "summary": "Creates a new group.",
        "description": "Creates a new group by specifying a name and environment (stage). Optionally, you can include a list of users and application roles to assign to the group during creation.\n\nAPI Client needs the **User management > Manage end-user groups** permission.",
        "operationId": "Group_CreateGroup",
        "requestBody": {
          "description": "Group object with the necessary information.",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CreationGroupRequest"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CreationGroupRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreationGroupResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "x-os-permissions": "API Client needs the **User management > Manage end-user groups** permission."
      },
      "get": {
        "tags": [
          "groups"
        ],
        "summary": "Returns the list of groups based on specified conditions.",
        "description": "Returns a list of groups that match the specified filters. Use query parameters to refine the search.\n\nAPI Client needs the **User management > Manage end-user groups** permission.",
        "operationId": "Group_QueryGroups",
        "parameters": [
          {
            "name": "nameContains",
            "in": "query",
            "description": "Filters users by name.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "environmentKey",
            "in": "query",
            "description": "Only returns groups associated to the specified environment (stage).",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Maximum number of results returned. Allowed values: 1 to 100 Default value: 100.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Offset of the first result returned. Default value: 0.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GroupResponsePaginatedResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "x-os-permissions": "API Client needs the **User management > Manage end-user groups** permission."
      }
    },
    "/groups/{key}": {
      "delete": {
        "tags": [
          "groups"
        ],
        "summary": "Deletes a group.",
        "description": "Deletes a specified group using the group's key.\n\nAPI Client needs the **User management > Manage end-user groups** permission.",
        "operationId": "Group_DeleteGroup",
        "parameters": [
          {
            "name": "key",
            "in": "path",
            "description": "The key of the group to be deleted.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "x-os-permissions": "API Client needs the **User management > Manage end-user groups** permission."
      },
      "get": {
        "tags": [
          "groups"
        ],
        "summary": "Returns information for a group.",
        "description": "Retrieves detailed information about a group, including its name, description, and environment.\n\nAPI Client needs the **User management > Manage end-user groups** permission.",
        "operationId": "Group_ReadGroup",
        "parameters": [
          {
            "name": "key",
            "in": "path",
            "description": "Group key.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GroupResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "x-os-permissions": "API Client needs the **User management > Manage end-user groups** permission."
      },
      "patch": {
        "tags": [
          "groups"
        ],
        "summary": "Updates a group.",
        "description": "Updates the details of a group using the group's key. Allows modification of the group's name or description.\n\nAPI Client needs the **User management > Manage end-user groups** permission.",
        "operationId": "Group_UpdateGroup",
        "parameters": [
          {
            "name": "key",
            "in": "path",
            "description": "The key of the group to be updated.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "The request object with the new values.",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/PatchGroupRequest"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/PatchGroupRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "x-os-permissions": "API Client needs the **User management > Manage end-user groups** permission."
      }
    },
    "/groups/{key}/application-roles": {
      "patch": {
        "tags": [
          "groups"
        ],
        "summary": "Allow to add or remove application roles from a group.",
        "description": "Allows adding or removing application roles from a specified group. Manage roles by specifying the group key and providing lists of application role keys to be added or removed.\n\nAPI Client needs the **User management > Manage end-user groups** permission.",
        "operationId": "Group_ModifyGroupApplicationRoles",
        "parameters": [
          {
            "name": "key",
            "in": "path",
            "description": "The group key.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "Request object with the application role keys to add or remove.",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/PatchGroupApplicationRolesRequest"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/PatchGroupApplicationRolesRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "x-os-permissions": "API Client needs the **User management > Manage end-user groups** permission."
      },
      "get": {
        "tags": [
          "groups"
        ],
        "summary": "Returns a list of application roles associated with a group.",
        "description": "Returns a list of application roles that match the specified filters. Use query parameters to refine the search.\n\nAPI Client needs the **User management > Manage end-user groups** permission.",
        "operationId": "Group_QueryApplicationRolesGroups",
        "parameters": [
          {
            "name": "key",
            "in": "path",
            "description": "The group key.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "assetKey",
            "in": "query",
            "description": "The asset key.",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "applicationRoleKey",
            "in": "query",
            "description": "The application role key.",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "nameContains",
            "in": "query",
            "description": "Filters application roles by name.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Maximum number of results returned. Allowed values: 1 to 100 Default value: 100.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Offset of the first result returned. Default value: 0.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Used for sorting the list. Ascending by default. Prepend a hyphen, \"-\", to get a descending sort, for example \"-name\". Default: name. Allowed: name, assetkey.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApplicationRoleResponsePaginatedResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "x-os-permissions": "API Client needs the **User management > Manage end-user groups** permission."
      }
    },
    "/organization-roles": {
      "post": {
        "tags": [
          "organization-roles"
        ],
        "summary": "Create an organization role.",
        "description": "Creates an organization role.\n\nAPI Client needs the **User management > Manage organization roles** permission.",
        "operationId": "OrganizationRole_CreateOrganizationRole",
        "requestBody": {
          "description": "Organization role object.",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/OrganizationRoleCreationRequest"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/OrganizationRoleCreationRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrganizationRoleCreationResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "x-os-permissions": "API Client needs the **User management > Manage organization roles** permission."
      },
      "get": {
        "tags": [
          "organization-roles"
        ],
        "summary": "Returns the list of organization roles.",
        "description": "Returns a list of organization roles. Use query parameters to filter the result based on different criteria.\n\nAPI Client needs at least one User management permission.",
        "operationId": "OrganizationRole_QueryOrganizationRoles",
        "parameters": [
          {
            "name": "roleKey",
            "in": "query",
            "description": "Organization role key.",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "nameContains",
            "in": "query",
            "description": "Filters list by name.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Used for sorting the list. Ascending by default. Prepend a hyphen, \"-\", to get a descending sort, for example \"-name\". The default is name. Allowed: name.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Maximum number of results returned. The value must be within 1 - 100 (both inclusive). The default value is 100.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Starting point or position of the first result returned. The default value is 0.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrganizationRoleHttpResponsePaginatedResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "x-os-permissions": "API Client needs at least one User management permission."
      }
    },
    "/organization-roles/{key}": {
      "delete": {
        "tags": [
          "organization-roles"
        ],
        "summary": "Delete an organization role.",
        "description": "Deletes an organization role.\n\nAPI Client needs the **User management > Manage organization roles** permission.",
        "operationId": "OrganizationRole_DeleteOrganizationRole",
        "parameters": [
          {
            "name": "key",
            "in": "path",
            "description": "Organization role key.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "x-os-permissions": "API Client needs the **User management > Manage organization roles** permission."
      },
      "get": {
        "tags": [
          "organization-roles"
        ],
        "summary": "Returns information for an organization role.",
        "description": "Returns details about an organization role based on the organization role key.\n\nAPI Client needs at least one User management permission.",
        "operationId": "OrganizationRole_ReadOrganizationRole",
        "parameters": [
          {
            "name": "key",
            "in": "path",
            "description": "Organization role key.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrganizationRoleHttpResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "x-os-permissions": "API Client needs at least one User management permission."
      },
      "patch": {
        "tags": [
          "organization-roles"
        ],
        "summary": "Update an organization role.",
        "description": "Updates the details of an organization role based on the organization role key.\n\nAPI Client needs the **User management > Manage organization roles** permission.",
        "operationId": "OrganizationRole_UpdateOrganizationRole",
        "parameters": [
          {
            "name": "key",
            "in": "path",
            "description": "Organization role key.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "Organization role object.",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/OrganizationRoleUpdateRequest"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/OrganizationRoleUpdateRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "x-os-permissions": "API Client needs the **User management > Manage organization roles** permission."
      }
    },
    "/permissions": {
      "get": {
        "tags": [
          "permissions"
        ],
        "summary": "Returns the list of permissions.",
        "description": "Returns all permissions.\n\nUse query parameters to filter the result based on different criteria.\n\nAPI Client needs at least one User management permission.",
        "operationId": "Permission_QueryPermissions",
        "parameters": [
          {
            "name": "nameContains",
            "in": "query",
            "description": "Filters list by name.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Maximum number of results returned. The value must be within 1 - 100 (both inclusive). The default value is 100.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Starting point or position of the first result returned. The default value is 0.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PermissionResponsePaginatedResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "x-os-permissions": "API Client needs at least one User management permission."
      }
    },
    "/permissions/{key}": {
      "get": {
        "tags": [
          "permissions"
        ],
        "summary": "Retrieve details about a permission.",
        "description": "Returns details about a permission based on the permission key.\n\nAPI Client needs at least one User management permission.",
        "operationId": "Permission_ReadPermission",
        "parameters": [
          {
            "name": "key",
            "in": "path",
            "description": "Permission key.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PermissionResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "x-os-permissions": "API Client needs at least one User management permission."
      }
    },
    "/users/{key}/application-roles/{roleKey}": {
      "post": {
        "tags": [
          "users"
        ],
        "summary": "Grants an application role to a user.",
        "description": "Assigns an application role to a user by providing the application role key and the user key.\n\nAPI Client needs the **User management > Manage end-user access** permission.",
        "operationId": "UserApplicationRoles_GrantApplicationRoleToUser",
        "parameters": [
          {
            "name": "key",
            "in": "path",
            "description": "User key.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "roleKey",
            "in": "path",
            "description": "Application role creation request.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "x-os-permissions": "API Client needs the **User management > Manage end-user access** permission."
      },
      "delete": {
        "tags": [
          "users"
        ],
        "summary": "Revokes an application role to a user.",
        "description": "Revokes an application role from a user by providing the user key and application role key.\n\nAPI Client needs the **User management > Manage end-user access** permission.",
        "operationId": "UserApplicationRoles_RevokeApplicationRoleForUser",
        "parameters": [
          {
            "name": "key",
            "in": "path",
            "description": "User key.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "roleKey",
            "in": "path",
            "description": "Role key for the application.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "x-os-permissions": "API Client needs the **User management > Manage end-user access** permission."
      }
    },
    "/users/{key}/application-roles": {
      "get": {
        "tags": [
          "users"
        ],
        "summary": "Returns the list of application roles associated with a user.",
        "description": "Returns a list of application roles associated with a user that match the specified filters. Use query parameters to refine the search.\n\nAPI Client needs the **User management > View end users** permission.",
        "operationId": "UserApplicationRoles_QueryUserApplicationRoles",
        "parameters": [
          {
            "name": "key",
            "in": "path",
            "description": "User key.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "nameContains",
            "in": "query",
            "description": "Filters application roles by name.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "assetKey",
            "in": "query",
            "description": "Only returns application roles for the specified asset.",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "environmentKey",
            "in": "query",
            "description": "Only returns application roles in the specified environment (stage).",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Used for sorting the list. Ascending by default. Prepend a hyphen, \"-\", to get a descending sort, for example \"-name\". Default: name. Allowed: name, environmentKey or assetKey.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Maximum number of results returned. Allowed values: 1 to 100 Default value: 100.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Offset of the first result returned. Default value: 0.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApplicationRoleResponsePaginatedResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "x-os-permissions": "API Client needs the **User management > View end users** permission."
      }
    },
    "/users/{key}/organization-roles": {
      "get": {
        "tags": [
          "users"
        ],
        "summary": "Returns the list of organization roles associated with a user.",
        "description": "Returns a list of organization roles based on the user key.\n\nIf the authenticated user is requesting their own roles, no permission is required.\n\nAPI Client needs the **User management > View members** or **User management > Manage users** permissions.",
        "operationId": "UserOrganizationRoles_GetUserOrganizationRoles",
        "parameters": [
          {
            "name": "key",
            "in": "path",
            "description": "User key.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Maximum number of results returned. The value must be within 1 - 100 (both inclusive). The default value is 100.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Starting point or position of the first result returned. The default value is 0.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrganizationRoleByUserResponsePaginatedResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "x-os-permissions": "API Client needs the **User management > View members** or **User management > Manage users** permissions."
      }
    },
    "/users/{key}/organization-roles/{roleKey}": {
      "post": {
        "tags": [
          "users"
        ],
        "summary": "Grant organization roles to a user.",
        "description": "Assigns organization roles to a user based on the user key.\n\nAPI Client needs the **User management > Manage organization access** permission.",
        "operationId": "UserOrganizationRoles_GrantOrganizationRoleToUser",
        "parameters": [
          {
            "name": "key",
            "in": "path",
            "description": "User key.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "roleKey",
            "in": "path",
            "description": "Organization role key.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "Contains role validity period and asset keys for which we assign this organization role.",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/GrantDetails"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/GrantDetails"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "x-os-permissions": "API Client needs the **User management > Manage organization access** permission."
      },
      "delete": {
        "tags": [
          "users"
        ],
        "summary": "Delete a user's organization roles.",
        "description": "Revokes organization roles for a user.\n\nAPI Client needs the **User management > Manage organization access** permission.",
        "operationId": "UserOrganizationRoles_RevokeOrganizationRoleForUser",
        "parameters": [
          {
            "name": "key",
            "in": "path",
            "description": "User key.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "roleKey",
            "in": "path",
            "description": "Organization role key.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "Revoke details contains the asset keys for which to revoke the organization role.",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/RevokeDetails"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/RevokeDetails"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "x-os-permissions": "API Client needs the **User management > Manage organization access** permission."
      }
    },
    "/users": {
      "post": {
        "tags": [
          "users"
        ],
        "summary": "Creates a new user.",
        "description": "Creates a new user by specifying the user information. You can provide the user's name, photo URL, and active status. Additionally, the AddToBuiltInIdentityProvider can be used to add the user to the built-in provider.\n\nAPI Client needs the **User management > Manage users** permission.",
        "operationId": "UserProfile_CreateUser",
        "requestBody": {
          "description": "The user object with the necessary information.",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UserProfileCreateRequest"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UserProfileCreateRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NewUserProfileResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "x-os-permissions": "API Client needs the **User management > Manage users** permission."
      },
      "get": {
        "tags": [
          "users"
        ],
        "summary": "Returns the list of users based on specified conditions.",
        "description": "Returns a list of users that match the specified filters. Use query parameters to refine the search.\n\nAPI Client needs the **User management > View end users** or **User management > View members** or **User management > Manage users** permissions. If API Client has the **User management > View end users** permission, retrieves the list of users with end-user roles. If API Client has the **User management > View members** permission, retrieves the list of users with organization roles. To get a list of all users (with or without roles), the API client needs either both the **User management > View end users** and **User management > View members** permissions, or the **User management > Manage users** permission.",
        "operationId": "UserProfile_QueryUsers",
        "parameters": [
          {
            "name": "nameOrEmailContains",
            "in": "query",
            "description": "Filters users by name or email address.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "nameOrEmailOrUsernameContains",
            "in": "query",
            "description": "Filters users by name or email address or username.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userKeys",
            "in": "query",
            "description": "Only returns users that match the specified keys. For more than one key, separates the keys with a comma. Allows up to 20 user keys.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "assetKey",
            "in": "query",
            "description": "Only returns users that have roles for the specified Asset.",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "status",
            "in": "query",
            "description": "Only returns users with the specified status.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/UserProfileStatus"
                }
              ]
            }
          },
          {
            "name": "lastLoginAtSince",
            "in": "query",
            "description": "Only returns users whose last login occurred on or after the specified date and time.",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "lastLoginAtTo",
            "in": "query",
            "description": "Only returns users whose last login occurred before or on the specified date and time.",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "hasOrganizationRoles",
            "in": "query",
            "description": "When set to true, only returns users that have at least one organization role. Default is false.",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "hasApplicationRoles",
            "in": "query",
            "description": "When set to true, only returns users that have at least one application role. Default is false.",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Used for sorting the list. Ascending by default. Prepend a hyphen, \"-\", to get a descending sort, for example \"-name\". Default: name. Allowed: key, name, email, status, lastLoginAt.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "environmentKey",
            "in": "query",
            "description": "Only returns users that have roles in the specified environment (stage).",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "embed",
            "in": "query",
            "description": "List of fields to embed in the response.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/UserProfileEmbed"
              }
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Maximum number of results returned. Allowed values: 1 to 100 Default value: 100.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Offset of the first result returned. Default value: 0.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserProfilePaginatedResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "x-os-permissions": "API Client needs the **User management > View end users** or **User management > View members** or **User management > Manage users** permissions. If API Client has the **User management > View end users** permission, retrieves the list of users with end-user roles. If API Client has the **User management > View members** permission, retrieves the list of users with organization roles. To get a list of all users (with or without roles), the API client needs either both the **User management > View end users** and **User management > View members** permissions, or the **User management > Manage users** permission."
      }
    },
    "/users/{key}": {
      "delete": {
        "tags": [
          "users"
        ],
        "summary": "Deletes a user.",
        "description": "Deletes a specified user using the user's key.\n\nAPI Client needs the **User management > Manage users** permission.",
        "operationId": "UserProfile_DeleteUser",
        "parameters": [
          {
            "name": "key",
            "in": "path",
            "description": "User key.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "x-os-permissions": "API Client needs the **User management > Manage users** permission."
      },
      "get": {
        "tags": [
          "users"
        ],
        "summary": "Retrieves a user.",
        "description": "Retrieves detailed information about a user using the user's key.\n\nAPI Client needs the **User management > View end users** or **User management > View members** or **User management > Manage users** permissions. If API Client has the **User management > View end users** permission, retrieves the list of users with end-user roles. If API Client has the **User management > View members** permission, retrieves the list of users with organization roles. To get a list of all users (with or without roles), the API client needs either both the **User management > View end users** and **User management > View members** permissions, or the **User management > Manage users** permission.",
        "operationId": "UserProfile_GetUser",
        "parameters": [
          {
            "name": "key",
            "in": "path",
            "description": "User key.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "embed",
            "in": "query",
            "description": "List of fields to embed in the response.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/UserProfileEmbed"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserProfile"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "x-os-permissions": "API Client needs the **User management > View end users** or **User management > View members** or **User management > Manage users** permissions. If API Client has the **User management > View end users** permission, retrieves the list of users with end-user roles. If API Client has the **User management > View members** permission, retrieves the list of users with organization roles. To get a list of all users (with or without roles), the API client needs either both the **User management > View end users** and **User management > View members** permissions, or the **User management > Manage users** permission."
      },
      "patch": {
        "tags": [
          "users"
        ],
        "summary": "Updates the user.",
        "description": "Updates the details of a user using the user's key. Allows modification of the user's name, photo URL, and active status.\n\nAPI Client needs the **User management > Manage users** permission.",
        "operationId": "UserProfile_PatchUser",
        "parameters": [
          {
            "name": "key",
            "in": "path",
            "description": "User key.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "User object with the information to be updated.",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UserProfilePatchRequest"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UserProfilePatchRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "204": {
            "description": "No Content"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "x-os-permissions": "API Client needs the **User management > Manage users** permission."
      }
    },
    "/users/{key}/groups": {
      "get": {
        "tags": [
          "users"
        ],
        "summary": "Returns a list of groups associated with a user.",
        "description": "Returns a list of groups associated with a user that match the specified filters. Use query parameters to refine the search.\n\nAPI Client needs the **User management > Manage end-user groups** permission.",
        "operationId": "UserProfile_QueryGroupsByUser",
        "parameters": [
          {
            "name": "key",
            "in": "path",
            "description": "The user key.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "nameContains",
            "in": "query",
            "description": "Filters groups by name.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "assetKey",
            "in": "query",
            "description": "Filters groups by asset key.",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "environmentKey",
            "in": "query",
            "description": "Filters groups by environment key. (stage)",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "membershipType",
            "in": "query",
            "description": "Filters groups by user's membership type that can be `Assigned` or `Mapped`.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/MembershipType"
                }
              ]
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Maximum number of results returned. Allowed values: 1 to 100 Default value: 100.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Offset of the first result returned. Default value: 0.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserGroupResponsePaginatedResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "x-os-permissions": "API Client needs the **User management > Manage end-user groups** permission."
      }
    }
  },
  "components": {
    "schemas": {
      "AssetContext": {
        "enum": [
          "Organization",
          "Asset"
        ],
        "type": "string"
      },
      "ApplicationRoleResponse": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string",
            "description": "The application role key.",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "description": "The name of the application role.",
            "nullable": true
          },
          "environmentKey": {
            "type": "string",
            "description": "The environment key.",
            "format": "uuid"
          },
          "assetKey": {
            "type": "string",
            "description": "The asset key.",
            "format": "uuid"
          },
          "externalKey": {
            "type": "string",
            "description": "The unique identifier for an application role independently of the environment.",
            "format": "uuid"
          },
          "claim": {
            "type": "string",
            "description": "The claim name.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ApplicationRoleResponsePaginatedResponse": {
        "type": "object",
        "properties": {
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApplicationRoleResponse"
            },
            "description": "The List of results.",
            "nullable": true
          },
          "page": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PageInfoWithTotals"
              }
            ],
            "description": "The details of the page information.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BulkApiStatus": {
        "enum": [
          "FinishedWithErrors",
          "Finished",
          "Processing",
          "Pending"
        ],
        "type": "string"
      },
      "BulkOperationStatus": {
        "enum": [
          "Error",
          "Inserted",
          "Updated",
          "Deleted"
        ],
        "type": "string"
      },
      "BulkUserProfileOperationRecord": {
        "required": [
          "email"
        ],
        "type": "object",
        "properties": {
          "key": {
            "type": "string",
            "description": "User profile record key",
            "format": "uuid",
            "nullable": true
          },
          "email": {
            "type": "string",
            "description": "Email of the user",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BulkUserProfileOperationRecordBulkApiResponse": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string",
            "description": "The identiifer of the bulk operation record",
            "format": "uuid"
          },
          "status": {
            "enum": [
              "FinishedWithErrors",
              "Finished",
              "Processing",
              "Pending"
            ],
            "allOf": [
              {
                "$ref": "#/components/schemas/BulkApiStatus"
              }
            ],
            "description": "Bullk API statuses Pending, Processing, Finished and FinishedWithErrors"
          },
          "errorCode": {
            "type": "string",
            "description": "Self Service error code for the overall bulk API operation.\n\nFor example, when the operation times out.",
            "nullable": true
          },
          "errorMessage": {
            "type": "string",
            "description": "Self Service error message for the overall bulk API operation.\n\nFor example, when the operation times out.",
            "nullable": true
          },
          "operations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BulkUserProfileOperationRecordBulkOperation"
            },
            "description": "Details of each operation performed in the bulk request.\n\nAvailable when the bulk operation has Finished or FinishedWithErrors.\n\nThis will be an empty list when the bulk operation is Pending or Progressing.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BulkUserProfileOperationRecordBulkOperation": {
        "type": "object",
        "properties": {
          "status": {
            "enum": [
              "Error",
              "Inserted",
              "Updated",
              "Deleted"
            ],
            "allOf": [
              {
                "$ref": "#/components/schemas/BulkOperationStatus"
              }
            ],
            "description": "Status of the individual operation in the list of bulk operations.\n\nFor example: Inserted, Updated, Errored"
          },
          "errorCode": {
            "type": "string",
            "description": "Self-support error code for the one operation if any error occured.",
            "nullable": true
          },
          "errorMessage": {
            "type": "string",
            "description": "Self-support error message for the one operation if any error occured.",
            "nullable": true
          },
          "record": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BulkUserProfileOperationRecord"
              }
            ],
            "description": "A JSON object containing some extra info about the record in this operation.\n\nThis could contain some pieces of request info as well as additional info from the operation output.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreationGroupRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of the group.",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "The description of the group.",
            "nullable": true
          },
          "environmentKey": {
            "type": "string",
            "description": "The environment key to associate with the group.",
            "format": "uuid"
          },
          "applicationRoleKeys": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "description": "The application role keys to associate with the group.",
            "nullable": true
          },
          "userKeys": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "description": "The user keys to associate with the group.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreationGroupResponse": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string",
            "description": "The group key.",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "GrantDetails": {
        "type": "object",
        "properties": {
          "grantPeriod": {
            "allOf": [
              {
                "$ref": "#/components/schemas/GrantPeriod"
              }
            ],
            "description": "Gets or sets the grant period.",
            "nullable": true
          },
          "assetKeys": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Gets or sets the asset keys.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GrantPeriod": {
        "type": "object",
        "properties": {
          "startTime": {
            "type": "string",
            "description": "The start date and time in utc.",
            "format": "date-time",
            "nullable": true
          },
          "endTime": {
            "type": "string",
            "description": "The end date and time in utc.",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GroupResponse": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string",
            "description": "The key of the group.",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "description": "The name of the group.",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "The description of the group.",
            "nullable": true
          },
          "environmentKey": {
            "type": "string",
            "description": "The environment key.",
            "format": "uuid"
          },
          "updatedAt": {
            "type": "string",
            "description": "The last updated date and time of the group.",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "GroupResponsePaginatedResponse": {
        "type": "object",
        "properties": {
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GroupResponse"
            },
            "description": "The List of results.",
            "nullable": true
          },
          "page": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PageInfoWithTotals"
              }
            ],
            "description": "The details of the page information.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GroupUser": {
        "type": "object",
        "properties": {
          "membershipTypes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MembershipType"
            },
            "description": "The list of membership types of this user in this group. Allowed values are 'Assigned' (if directly added to the group) or 'Mapped' (if added via group mappings).",
            "nullable": true
          },
          "user": {
            "allOf": [
              {
                "$ref": "#/components/schemas/GroupUserProfile"
              }
            ],
            "description": "The user details.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Represents a user in a group."
      },
      "GroupUserPaginatedResponse": {
        "type": "object",
        "properties": {
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GroupUser"
            },
            "description": "The List of results.",
            "nullable": true
          },
          "page": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PageInfoWithTotals"
              }
            ],
            "description": "The details of the page information.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GroupUserProfile": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string",
            "description": "The user's key.",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "description": "The user's name.",
            "nullable": true
          },
          "email": {
            "type": "string",
            "description": "The user's email.",
            "nullable": true
          },
          "status": {
            "enum": [
              "Active",
              "Invited",
              "Inactive",
              "PendingRegistration"
            ],
            "allOf": [
              {
                "$ref": "#/components/schemas/UserProfileStatus"
              }
            ],
            "description": "The user's status. Allowed values are 'Active', 'Inactive', 'PendingRegistration' and 'Invited'."
          },
          "photoUrl": {
            "type": "string",
            "description": "A URL pointing to the user's photo.",
            "nullable": true
          },
          "lastLoginAt": {
            "type": "string",
            "description": "The date of the last time the user logged in.",
            "format": "date-time"
          },
          "embedded": {
            "allOf": [
              {
                "$ref": "#/components/schemas/UserProfileEmbedded"
              }
            ],
            "description": "The embedded information to provide. (optional) Only available when the request includes the query parameter `embed=`, e.g. `embed=userIdentityProviders`",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "The profile of a group member."
      },
      "MembershipType": {
        "enum": [
          "Assigned",
          "Mapped"
        ],
        "type": "string"
      },
      "NewUserProfileResponse": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string",
            "description": "The user's key.",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "OrgRolePermissionsVisibility": {
        "enum": [
          "Hidden",
          "Public",
          "Internal"
        ],
        "type": "string"
      },
      "OrganizationRoleByUserResponse": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string",
            "description": "Gets or sets organization role key.",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "description": "Gets or sets organization role name.",
            "nullable": true
          },
          "grantPeriod": {
            "allOf": [
              {
                "$ref": "#/components/schemas/GrantPeriod"
              }
            ],
            "description": "Gets or sets the period during which the role is valid.",
            "nullable": true
          },
          "assetKey": {
            "type": "string",
            "description": "Gets or sets the asset key.",
            "format": "uuid",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "OrganizationRoleByUserResponsePaginatedResponse": {
        "type": "object",
        "properties": {
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrganizationRoleByUserResponse"
            },
            "description": "The List of results.",
            "nullable": true
          },
          "page": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PageInfoWithTotals"
              }
            ],
            "description": "The details of the page information.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "OrganizationRoleCreationRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Gets or sets the name of Organization Role.",
            "nullable": true
          },
          "permissions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PermissionDetails"
            },
            "description": "Gets or sets the list of permissions for the Organization Role.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "OrganizationRoleCreationResponse": {
        "type": "object",
        "properties": {
          "orgRoleKey": {
            "type": "string",
            "description": "Gets or sets the Organization Role Key.",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "OrganizationRoleHttpResponse": {
        "required": [
          "permissions"
        ],
        "type": "object",
        "properties": {
          "key": {
            "type": "string",
            "description": "Gets or sets the organization role key.",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "description": "Gets or sets the organization role name.",
            "nullable": true
          },
          "permissions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PermissionDetails"
            },
            "description": "Gets or sets the permissions.",
            "nullable": true
          },
          "isReadOnly": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether the organization role is readonly."
          }
        },
        "additionalProperties": false
      },
      "OrganizationRoleHttpResponsePaginatedResponse": {
        "type": "object",
        "properties": {
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrganizationRoleHttpResponse"
            },
            "description": "The List of results.",
            "nullable": true
          },
          "page": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PageInfoWithTotals"
              }
            ],
            "description": "The details of the page information.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "OrganizationRoleUpdateRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Gets or sets the name of the organization role.",
            "nullable": true
          },
          "permissions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PermissionDetails"
            },
            "description": "Gets or sets the list of permissions for the organization role.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PageInfoWithTotals": {
        "required": [
          "count",
          "limit",
          "offset"
        ],
        "type": "object",
        "properties": {
          "count": {
            "type": "integer",
            "description": "The results of the current page.",
            "format": "int32"
          },
          "limit": {
            "type": "integer",
            "description": "The limit of results per page.",
            "format": "int32"
          },
          "offset": {
            "type": "integer",
            "description": "The offset of the current page of results.",
            "format": "int32"
          },
          "nextPageOffset": {
            "type": "integer",
            "description": "The offset of the next page of results. (optional)",
            "format": "int32",
            "nullable": true,
            "readOnly": true
          },
          "totalResults": {
            "type": "integer",
            "description": "The total number of results.",
            "format": "int32",
            "nullable": true
          },
          "totalPages": {
            "type": "integer",
            "description": "The total number of pages with results.",
            "format": "int32",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "PatchGroupApplicationRolesRequest": {
        "type": "object",
        "properties": {
          "applicationRoleKeysToAdd": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "description": "The list of application role keys to add to the group.",
            "nullable": true
          },
          "applicationRoleKeysToRemove": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "description": "The list of application role keys to remove from the group.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PatchGroupRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of the group.",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "The description of the group.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PatchUsersByGroupRequest": {
        "type": "object",
        "properties": {
          "userKeysToAdd": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "description": "The list of user keys to add to the group.",
            "nullable": true
          },
          "userKeysToRemove": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "description": "The list of user keys to remove from the group.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PermissionDetails": {
        "type": "object",
        "properties": {
          "permissionKey": {
            "type": "string",
            "description": "Gets or sets the permission key.",
            "format": "uuid"
          },
          "environmentKeys": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Gets or sets the environment keys.",
            "nullable": true
          },
          "claimName": {
            "type": "string",
            "description": "Gets or sets the claim name.",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "Gets or sets the permission name.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PermissionResponse": {
        "required": [
          "allowedScopes",
          "inherits"
        ],
        "type": "object",
        "properties": {
          "key": {
            "type": "string",
            "description": "Gets or sets the permission key.",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "description": "Gets or sets the permission name.",
            "nullable": true
          },
          "category": {
            "type": "string",
            "description": "Gets or sets the category for the permission.",
            "nullable": true
          },
          "purpose": {
            "type": "string",
            "description": "Gets or sets the purpose for the permission.",
            "nullable": true
          },
          "visibility": {
            "enum": [
              "Hidden",
              "Public",
              "Internal"
            ],
            "allOf": [
              {
                "$ref": "#/components/schemas/OrgRolePermissionsVisibility"
              }
            ],
            "description": "Gets or sets the visibility for the permission."
          },
          "inherits": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PermissionWithStages"
            },
            "description": "Gets or sets the inherits.",
            "nullable": true
          },
          "allowStages": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether permission applies to a specific stage."
          },
          "allowedScopes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AssetContext"
            },
            "description": "Gets or sets the allowed scopes.",
            "nullable": true
          },
          "claimName": {
            "type": "string",
            "description": "Gets or sets the claim name.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PermissionResponsePaginatedResponse": {
        "type": "object",
        "properties": {
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PermissionResponse"
            },
            "description": "The List of results.",
            "nullable": true
          },
          "page": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PageInfoWithTotals"
              }
            ],
            "description": "The details of the page information.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PermissionWithStages": {
        "required": [
          "realmStages"
        ],
        "type": "object",
        "properties": {
          "key": {
            "type": "string",
            "description": "Gets or sets the permission key.",
            "format": "uuid"
          },
          "realmStages": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Stage"
            },
            "description": "Gets or sets the realm stage list.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ProblemDetails": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "description": "A URI reference that identifies the problem type.",
            "nullable": true
          },
          "title": {
            "type": "string",
            "description": "A short, human-readable summary of the problem.",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "description": "The HTTP status code applicable to the problem.",
            "format": "int32",
            "nullable": true
          },
          "detail": {
            "type": "string",
            "description": "A human-readable explanation of the error.",
            "nullable": true
          },
          "instance": {
            "type": "string",
            "description": "A URI that identifies the specific occurrence of the problem.",
            "nullable": true
          },
          "traceId": {
            "type": "string",
            "description": "This field helps OutSystems support track and investigate specific error occurrences. Providing this identifier when reporting an issue allows for more precise and faster troubleshooting."
          },
          "errorCode": {
            "type": "string",
            "description": "This error code serves the purpose to communicate with OutSystems Support and help diagnose errors."
          }
        },
        "description": "A standardized error response as per RFC 7807 (Problem Details for HTTP APIs)."
      },
      "RevokeDetails": {
        "type": "object",
        "properties": {
          "assetKeys": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Gets or sets the asset keys.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RoleUserResponse": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string",
            "description": "The user's key.",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "description": "The user's full name.",
            "nullable": true
          },
          "email": {
            "type": "string",
            "description": "The user's email address.",
            "nullable": true
          },
          "status": {
            "enum": [
              "Active",
              "Invited",
              "Inactive",
              "PendingRegistration"
            ],
            "allOf": [
              {
                "$ref": "#/components/schemas/UserProfileStatus"
              }
            ],
            "description": "The user's status."
          },
          "photoUrl": {
            "type": "string",
            "description": "The user's photo URL.",
            "nullable": true
          },
          "lastLoginAt": {
            "type": "string",
            "description": "The timestamp of the last login (or token refresh) for this user in UTC.",
            "format": "date-time",
            "nullable": true
          },
          "_embedded": {
            "allOf": [
              {
                "$ref": "#/components/schemas/UserProfileEmbedded"
              }
            ],
            "description": "The embedded information to provide. (optional)\n\nOnly available when the request includes the query parameter `embed=`,\n\ne.g. `embed=userIdentityProviders`",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RoleUserResponsePaginatedResponse": {
        "type": "object",
        "properties": {
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RoleUserResponse"
            },
            "description": "The List of results.",
            "nullable": true
          },
          "page": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PageInfoWithTotals"
              }
            ],
            "description": "The details of the page information.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Stage": {
        "enum": [
          "PRD",
          "QA",
          "DEV",
          "SAME_STAGE"
        ],
        "type": "string"
      },
      "UserGroupResponse": {
        "required": [
          "group",
          "membershipTypes"
        ],
        "type": "object",
        "properties": {
          "membershipTypes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MembershipType"
            },
            "description": "The list of membership types of the user in this group. Allowed values are 'Assigned' (if directly added to the group) or 'Mapped' (if added via group mappings).",
            "nullable": true
          },
          "group": {
            "allOf": [
              {
                "$ref": "#/components/schemas/GroupResponse"
              }
            ],
            "description": "A group that a user is part of.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Represents a group that a user is part of."
      },
      "UserGroupResponsePaginatedResponse": {
        "type": "object",
        "properties": {
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserGroupResponse"
            },
            "description": "The List of results.",
            "nullable": true
          },
          "page": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PageInfoWithTotals"
              }
            ],
            "description": "The details of the page information.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UserIdpProfile": {
        "type": "object",
        "properties": {
          "userKey": {
            "type": "string",
            "description": "The user key.",
            "format": "uuid"
          },
          "identityProviderKey": {
            "type": "string",
            "description": "The identity provider key (format: guid).",
            "format": "uuid"
          },
          "subject": {
            "type": "string",
            "description": "The subject claims in the token issued by the IdP.",
            "nullable": true
          },
          "username": {
            "type": "string",
            "description": "The username.",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "The user's full name.",
            "nullable": true
          },
          "email": {
            "type": "string",
            "description": "The user's email address.",
            "nullable": true
          },
          "photoUrl": {
            "type": "string",
            "description": "The user's photo URL.",
            "nullable": true
          },
          "firstLoginAt": {
            "type": "string",
            "description": "The timestamp of the first login for this user using the idp in UTC.",
            "format": "date-time",
            "nullable": true
          },
          "lastLoginAt": {
            "type": "string",
            "description": "The timestamp of the last login for this user using the idp in UTC.",
            "format": "date-time",
            "nullable": true
          },
          "isEmailVerified": {
            "type": "boolean",
            "description": "The value indicating whether or not the user's email is verified.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UserProfile": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string",
            "description": "The user key (format: guid).",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "description": "The user's full name.",
            "nullable": true
          },
          "email": {
            "type": "string",
            "description": "The user's email address.",
            "nullable": true
          },
          "status": {
            "enum": [
              "Active",
              "Invited",
              "Inactive",
              "PendingRegistration"
            ],
            "allOf": [
              {
                "$ref": "#/components/schemas/UserProfileStatus"
              }
            ],
            "description": "The user's Profile Status."
          },
          "access": {
            "allOf": [
              {
                "$ref": "#/components/schemas/UserProfileAccess"
              }
            ],
            "description": "The user's profile access.",
            "nullable": true
          },
          "lastLoginAt": {
            "type": "string",
            "description": "The timestamp of the last login (or token refresh) for this user in UTC.",
            "format": "date-time",
            "nullable": true
          },
          "isActive": {
            "type": "boolean",
            "description": "The value indicating whether user profile is active or not."
          },
          "photoUrl": {
            "type": "string",
            "description": "The user's photo URL.",
            "nullable": true
          },
          "isEmailVerified": {
            "type": "boolean",
            "description": "The value indicating whether or not the user's email is verified.",
            "nullable": true
          },
          "isTermsAndConditionsAccepted": {
            "type": "boolean",
            "description": "The value indicating whether or not the user has accepted the terms and conditions."
          },
          "_embedded": {
            "allOf": [
              {
                "$ref": "#/components/schemas/UserProfileEmbedded"
              }
            ],
            "description": "The embedded information to provide. (optional)\n\nOnly available when the request includes the query parameter `embed=`,\n\ne.g. `embed=applicationRoles`",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UserProfileAccess": {
        "type": "object",
        "properties": {
          "hasOrganizationRoles": {
            "type": "boolean",
            "description": "User has organization-level roles"
          },
          "hasApplicationRoles": {
            "type": "boolean",
            "description": "User has application roles"
          }
        },
        "additionalProperties": false
      },
      "UserProfileCreateRequest": {
        "required": [
          "email"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The user’s name.",
            "nullable": true
          },
          "email": {
            "type": "string",
            "description": "The user’s email address.",
            "nullable": true
          },
          "isActive": {
            "type": "boolean",
            "description": "Sets the user as active. Default is true (active)."
          },
          "photoUrl": {
            "type": "string",
            "description": "The user’s photo url.",
            "nullable": true
          },
          "addToBuiltInIdentityProvider": {
            "type": "boolean",
            "description": "Creates the user in the built-in identity provider. Default is false (not created in the built-in identity provider)."
          }
        },
        "additionalProperties": false
      },
      "UserProfileCreateRequestBulkApiRequest": {
        "required": [
          "records"
        ],
        "type": "object",
        "properties": {
          "records": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserProfileCreateRequest"
            },
            "description": "The list of requests",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UserProfileEmbed": {
        "enum": [
          "ApplicationRoles",
          "UserIdentityProviders"
        ],
        "type": "string"
      },
      "UserProfileEmbedded": {
        "type": "object",
        "properties": {
          "applicationRoles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApplicationRoleResponse"
            },
            "description": "List of application roles.",
            "nullable": true
          },
          "userIdentityProviders": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserIdpProfile"
            },
            "description": "List of user identity providers.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UserProfilePaginatedResponse": {
        "type": "object",
        "properties": {
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserProfile"
            },
            "description": "The List of results.",
            "nullable": true
          },
          "page": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PageInfoWithTotals"
              }
            ],
            "description": "The details of the page information.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UserProfilePatchRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The user's name.",
            "nullable": true
          },
          "isActive": {
            "type": "boolean",
            "description": "The user as active or inactive.",
            "nullable": true
          },
          "photoUrl": {
            "type": "string",
            "description": "The user's photo url.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UserProfileStatus": {
        "enum": [
          "Active",
          "Invited",
          "Inactive",
          "PendingRegistration"
        ],
        "type": "string"
      }
    }
  }
}
